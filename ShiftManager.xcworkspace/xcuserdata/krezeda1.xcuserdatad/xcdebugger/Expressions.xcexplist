<?xml version="1.0" encoding="UTF-8"?>
<VariablesViewState
   version = "1.0">
   <ContextStates>
      <ContextState
         contextName = "EditCallendarDayViewController.saveButtonDidPress() -&gt; ():EditCallendarDayViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "UserManager.sharedInstance.selectedUser">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ExtraShiftDataSource.tableView(UITableView, numberOfRowsInSection : Int) -&gt; Int:ExtraShiftDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "ShiftManager.sharedInstance.numberOfShifts()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "ShiftManager.saveShift(shift : ShiftModel) -&gt; ():ShiftManager.swift">
      </ContextState>
      <ContextState
         contextName = "CalendarDataSource.getDateForCell(at : IndexPath) -&gt; Date?:CalendarDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "((today.component(.month) ?? 0) + indexPath.section)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EditShiftViewController.saveButtonDidPress() -&gt; ():EditShiftViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "newShiftView.date()">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.update(User : UserModel) -&gt; ():UserManager.swift">
      </ContextState>
      <ContextState
         contextName = "CalendarCollectionViewCell.setDayTitle() -&gt; ():CalendarCollectionViewCell.swift">
         <PersistentStrings>
            <PersistentString
               value = "dateFormatter.string(from: date)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CalendarDataSource.getDateForCell(at : IndexPath) -&gt; Date:CalendarDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "today.component(.day)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NewShiftView.date() -&gt; Date:NewShiftView.swift">
         <PersistentStrings>
            <PersistentString
               value = "datePicker.date">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EditCallendarDayViewController.setupViewData() -&gt; ():EditCallendarDayViewController.swift">
         <PersistentStrings>
            <PersistentString
               value = "UserManager.sharedInstance.selectedUser">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "EditCallendarDayViewController.setExtraShifts(extraShifts : [ShiftModel]) -&gt; ():EditCallendarDayViewController.swift">
      </ContextState>
      <ContextState
         contextName = "UserModel.generateShifts() -&gt; ():UserModel.swift">
         <PersistentStrings>
            <PersistentString
               value = "UserManager.sharedInstance.getMaxDate()">
            </PersistentString>
            <PersistentString
               value = "date.compare(.isSameDay(as: UserManager.sharedInstance.getMaxDate()))">
            </PersistentString>
            <PersistentString
               value = "UserManager.sharedInstance">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserBarView.collectionView(UICollectionView, didSelectItemAt : IndexPath) -&gt; ():UserBarView.swift">
         <PersistentStrings>
            <PersistentString
               value = "UserManager.sharedInstance.userForIndex(indexPath.row)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.shiftForDate(Date) -&gt; ShiftModel?:UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "users.first?.shiftForDateDictionary">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "NewUserViewController.registerButtonDidPress() -&gt; ():NewUserViewController.swift">
      </ContextState>
      <ContextState
         contextName = "ExtraShiftViewController.doneButtonDidPress() -&gt; ():ExtraShiftViewController.swift">
      </ContextState>
      <ContextState
         contextName = "CalendarDataSource.collectionView(UICollectionView, cellForItemAt : IndexPath) -&gt; UICollectionViewCell:CalendarDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "UserManager.sharedInstance.shiftForDate(date)">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CalendarDataSource.collectionView(UICollectionView, viewForSupplementaryElementOfKind : String, at : IndexPath) -&gt; UICollectionReusableView:CalendarDataSource.swift">
         <PersistentStrings>
            <PersistentString
               value = "DateFormatter().shortMonthSymbols[date.component(.month)!]">
            </PersistentString>
            <PersistentString
               value = "date.component(.month)!">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "UserManager.saveShift(shift : ShiftModel) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "shift.uniqueID.isEmpty">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
      <ContextState
         contextName = "CalendarViewController.init(nibName : String?, bundle : Bundle?) -&gt; CalendarViewController:CalendarViewController.swift">
      </ContextState>
      <ContextState
         contextName = "UserManager.addNewUser(user : UserModel) -&gt; ():UserManager.swift">
         <PersistentStrings>
            <PersistentString
               value = "users">
            </PersistentString>
         </PersistentStrings>
      </ContextState>
   </ContextStates>
</VariablesViewState>
